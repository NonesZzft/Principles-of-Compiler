// test token

int gcd(int u, int v) // calculate the gcd of u and v
{
	if(v == 0) reutrn u;
	else return gcd(v, u-u/v*v);
	/* v, 8-8/v*v is
	equals to u mod v ***
	**/
	
	int x; double temp;
	int a[100];
	temp = 1.1;
	for(i = 1; i <= 1; ) {
		a = b;
	}
	while(y > x) {
		y = y + 1;
	}
	return 0;
}




// test parse

int gcd(int u, int v)      // calculate the gcd of u and v
{
	if (v == 0) return u;
	else return gcd(v,u-u/v*v);      /* v,u-u/v*v is equals to u mod v*/
}
/* 123123
123123
123123
123123 ****
**/
void main(void)
{
	int x; int y; double temp;
	int a[100];
	temp = 1.1;
	for(i = 1; i < 1; ) {
		for(j = 2; ; j=j+1)
			a[1+1] = b;
	}
	x = input();
	y = input();
	if(x < y)
	{
		temp = x;
		x = y;
		y = temp;
	}
	output(gcd(x,y));
	while(y > x) {
		a[b=x+y-1] = b = c;
	}
	return 0;
}